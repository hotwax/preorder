{"remainingRequest":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js!/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/aniket/Desktop/Hact/preorder/src/components/Image.vue?vue&type=template&id=8b23204a","dependencies":[{"path":"/home/aniket/Desktop/Hact/preorder/src/components/Image.vue","mtime":1634884664336},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js","mtime":1634884699504},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634884699780},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js","mtime":1634884699380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImltZyIsIHsKICAgIHNyYzogX2N0eC5pbWFnZVVybAogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJzcmMiXSk7Cn0="},{"version":3,"sources":["/home/aniket/Desktop/Hact/preorder/src/components/Image.vue"],"names":[],"mappings":";;uBACE,YAAA,CAAsB,KAAtB,EAAsB;AAAhB,IAAA,GAAG,EAAE,IAAA,CAAA;AAAW,GAAtB,EAAmB,IAAnB,EAAmB;AAAA;AAAnB,IAAmB,CAAA,KAAA,CAAnB,C","sourcesContent":["<template>\n  <img :src=\"imageUrl\"/>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"Image\",\n  props: ['src'],\n  components: {},\n  created() {\n    if (\n      process.env.VUE_APP_RESOURCE_URL\n    ) {\n      this.resourceUrl = process.env.VUE_APP_RESOURCE_URL;\n    }\n  },\n  mounted() {\n    this.setImageUrl();\n  },\n  updated() {\n    this.setImageUrl();\n  },\n  data() {\n    return {\n      resourceUrl: '',\n      imageUrl: require(\"@/assets/images/defaultImage.png\")\n    }\n  },\n  methods: {\n    checkIfImageExists(src: string) {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = function () {\n          resolve(true);\n        }\n        img.onerror = function () {\n          reject(false);\n        }\n        img.src = src;\n      })\n    },\n    setImageUrl() {\n      if (this.src) {\n        if (this.src.indexOf('assets/') != -1) {\n          // Assign directly in case of assets\n          this.imageUrl = this.src;\n        } else if (this.src.startsWith('http')) {\n          // If starts with http, it is web url check for existence and assign\n          this.checkIfImageExists(this.src).then(() => {\n            this.imageUrl = this.src;\n          })\n        } else {\n          // Image is from resource server, hence append to base resource url, check for existence and assign\n          const imageUrl = this.resourceUrl.concat(this.src)\n          this.checkIfImageExists(imageUrl).then(() => {\n            this.imageUrl = imageUrl;\n          })\n        }\n      }\n    }\n  },\n});\n</script>\n"],"sourceRoot":""}]}