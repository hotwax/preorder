{"remainingRequest":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js!/home/aniket/Desktop/Hact/preorder/node_modules/ts-loader/index.js??ref--14-2!/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js??ref--13-0!/home/aniket/Desktop/Hact/preorder/src/store/modules/user/actions.ts","dependencies":[{"path":"/home/aniket/Desktop/Hact/preorder/src/store/modules/user/actions.ts","mtime":1634884664340},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js","mtime":1634884699504},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/ts-loader/index.js","mtime":1634884699568},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js","mtime":1634884699056}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js??ref--13-0!/home/aniket/Desktop/Hact/preorder/src/store/modules/user/actions.ts"],"names":[],"mappings":"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","sourcesContent":["import { UserService } from '@/services/UserService'\nimport { ActionTree } from 'vuex'\nimport RootState from '@/store/RootState'\nimport UserState from './UserState'\nimport * as types from './mutation-types'\nimport { hasError, showToast } from '@/utils'\nimport { translate } from '@/i18n'\nimport moment from 'moment';\nimport emitter from '@/event-bus'\nimport \"moment-timezone\";\n\nconst actions: ActionTree<UserState, RootState> = {\n\n  /**\n * Login user and return token\n */\n  async login ({ commit, dispatch }, { username, password }) {\n    try {\n      const resp = await UserService.login(username, password)\n      if (resp.status === 200 && resp.data) {\n        if (resp.data.token) {\n            commit(types.USER_TOKEN_CHANGED, { newToken: resp.data.token })\n            dispatch('getProfile')\n            return resp.data;\n        } else if (hasError(resp)) {\n          showToast(translate('Sorry, your username or password is incorrect. Please try again.'));\n          console.error(\"error\", resp.data._ERROR_MESSAGE_);\n          return Promise.reject(new Error(resp.data._ERROR_MESSAGE_));\n        }\n      } else {\n        showToast(translate('Something went wrong'));\n        console.error(\"error\", resp.data._ERROR_MESSAGE_);\n        return Promise.reject(new Error(resp.data._ERROR_MESSAGE_));\n      }\n    } catch (err) {\n      showToast(translate('Something went wrong'));\n      console.error(\"error\", err);\n      return Promise.reject(new Error(err))\n    }\n    // return resp\n  },\n\n  /**\n   * Logout user\n   */\n  async logout ({ commit }) {\n    // TODO add any other tasks if need\n    commit(types.USER_END_SESSION)\n    \n  },\n\n  /**\n   * Get User profile\n   */\n  async getProfile ( { commit }) {\n    const resp = await UserService.getProfile()\n    if (resp.status === 200) {\n      const localTimeZone = moment.tz.guess();\n      if (resp.data.userTimeZone !== localTimeZone) {\n        emitter.emit('timeZoneDifferent', { profileTimeZone: resp.data.userTimeZone, localTimeZone});\n      }\n      commit(types.USER_INFO_UPDATED, resp.data);\n    }\n  },\n\n  /**\n   * Update user timeZone\n   */\n     async setUserTimeZone ( { state, commit }, payload) {\n      const resp = await UserService.setUserTimeZone(payload)\n      if (resp.status === 200 && !hasError(resp)) {\n        const current: any = state.current;\n        current.userTimeZone = payload.tzId;\n        commit(types.USER_INFO_UPDATED, current);\n        showToast(translate(\"Time zone updated successfully\"));\n      }\n    },\n\n  /**\n   * Set user's selected brand\n   */\n     async setSelectedBrand ( { commit }, payload) {\n      commit(types.USER_BRAND_UPDATED, payload.selectedBrand);\n      // Reset all the current queries\n      this.dispatch(\"product/resetProductList\")\n      this.dispatch(\"order/resetOrderQuery\")\n    }\n}\nexport default actions;"],"sourceRoot":""}]}