{"remainingRequest":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js!/home/aniket/Desktop/Hact/preorder/node_modules/ts-loader/index.js??ref--14-2!/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js??ref--13-0!/home/aniket/Desktop/Hact/preorder/src/store/modules/job/getters.ts","dependencies":[{"path":"/home/aniket/Desktop/Hact/preorder/src/store/modules/job/getters.ts","mtime":1634884664340},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js","mtime":1634884699504},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/ts-loader/index.js","mtime":1634884699568},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js","mtime":1634884699056}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIGdldHRlcnMgPSB7CiAgZ2V0TGlzdDogZnVuY3Rpb24gZ2V0TGlzdChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmxpc3QuaXRlbXM7CiAgfSwKICBnZXRUb3RhbDogZnVuY3Rpb24gZ2V0VG90YWwoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5saXN0LnRvdGFsOwogIH0sCiAgaXNQb2xsaW5nOiBmdW5jdGlvbiBpc1BvbGxpbmcoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5wb2xsaW5nOwogIH0sCiAgaXNKb2JQZW5kaW5nOiBmdW5jdGlvbiBpc0pvYlBlbmRpbmcoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5saXN0LnRvdGFsID4gMDsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IGdldHRlcnM7"},{"version":3,"sources":["/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js??ref--13-0!/home/aniket/Desktop/Hact/preorder/src/store/modules/job/getters.ts"],"names":[],"mappings":"AAIA,IAAM,OAAO,GAAqC;AAC9C,EAAA,OAD8C,mBACrC,KADqC,EAChC;AACV,WAAO,KAAK,CAAC,IAAN,CAAW,KAAlB;AACH,GAH6C;AAI9C,EAAA,QAJ8C,oBAIrC,KAJqC,EAIhC;AACV,WAAO,KAAK,CAAC,IAAN,CAAW,KAAlB;AACH,GAN6C;AAO9C,EAAA,SAP8C,qBAOpC,KAPoC,EAO/B;AACX,WAAO,KAAK,CAAC,OAAb;AACH,GAT6C;AAU9C,EAAA,YAV8C,wBAUjC,KAViC,EAU5B;AACd,WAAO,KAAK,CAAC,IAAN,CAAW,KAAX,GAAmB,CAA1B;AACH;AAZ6C,CAAlD;AAcA,eAAe,OAAf","sourcesContent":["import { GetterTree } from 'vuex'\nimport JobState from './JobState'\nimport RootState from '../../RootState'\n\nconst getters: GetterTree <JobState, RootState> = {\n    getList (state) {\n        return state.list.items\n    },\n    getTotal(state) {\n        return state.list.total\n    },\n    isPolling(state) {\n        return state.polling;\n    },\n    isJobPending(state) {\n        return state.list.total > 0;\n    }\n}\nexport default getters;"],"sourceRoot":""}]}