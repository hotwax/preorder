{"remainingRequest":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js!/home/aniket/Desktop/Hact/preorder/node_modules/ts-loader/index.js??ref--14-2!/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js??ref--13-0!/home/aniket/Desktop/Hact/preorder/src/api/index.ts","dependencies":[{"path":"/home/aniket/Desktop/Hact/preorder/src/api/index.ts","mtime":1634884664324},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js","mtime":1634884699504},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/ts-loader/index.js","mtime":1634884699568},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js","mtime":1634884699056}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL2FuaWtldC9EZXNrdG9wL0hhY3QvcHJlb3JkZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9hbmlrZXQvRGVza3RvcC9IYWN0L3ByZW9yZGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgc2V0dXBDYWNoZSB9IGZyb20gJ2F4aW9zLWNhY2hlLWFkYXB0ZXInOwppbXBvcnQgT2ZmbGluZUhlbHBlciBmcm9tICcuLi9vZmZsaW5lLWhlbHBlcic7CmltcG9ydCBlbWl0dGVyIGZyb20gIi4uL2V2ZW50LWJ1cyI7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKaW1wb3J0IHsgU3RhdHVzQ29kZXMgfSBmcm9tICdodHRwLXN0YXR1cy1jb2Rlcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnQC9yb3V0ZXInOwpheGlvcy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIHZhciB0b2tlbiA9IHN0b3JlLmdldHRlcnNbJ3VzZXIvZ2V0VXNlclRva2VuJ107CgogIGlmICh0b2tlbikgewogICAgY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCZWFyZXIgJyArIHRva2VuOwogICAgY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSk7CmF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgLy8gQW55IHN0YXR1cyBjb2RlIHRoYXQgbGllIHdpdGhpbiB0aGUgcmFuZ2Ugb2YgMnh4IGNhdXNlIHRoaXMgZnVuY3Rpb24gdG8gdHJpZ2dlcgogIC8vIERvIHNvbWV0aGluZyB3aXRoIHJlc3BvbnNlIGRhdGEKICByZXR1cm4gcmVzcG9uc2U7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIFRPRE8gSGFuZGxlIGl0IGluIGEgYmV0dGVyIHdheQogIC8vIEN1cnJlbnRseSB3aGVuIHRoZSBhcHAgZ2V0cyBvZmZsaW5lLCB0aGUgdGltZSBiZXR3ZWVuIGFkZGluZyBhIGxvYWRlciBhbmQgcmVtb3ZpbmcgaXQgaXMgZnJhY3Rpb25hbCBkdWUgdG8gd2hpY2ggbG9hZGVyIGRpc21pc3MgaXMgY2FsbGVkIGJlZm9yZSBsb2FkZXIgcHJlc2VudAogIC8vIHdoaWNoIGNhdXNlIGxvYWRlciB0byBydW4gaW5kZWZpbml0ZWx5CiAgLy8gRm9sbG93aW5nIGdpdmVzIGRpc21pc3MgbG9hZGVyIGEgZGVsYXkgb2YgMTAwIG1pY3Jvc2Vjb25kcyB0byBnZXQgYm90aCB0aGUgYWN0aW9ucyBpbiBzeW5jCiAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gZW1pdHRlci5lbWl0KCJkaXNtaXNzTG9hZGVyIik7CiAgfSwgMTAwKTsKCiAgaWYgKGVycm9yLnJlc3BvbnNlKSB7CiAgICAvLyBUT0RPIEhhbmRsZSBjYXNlIGZvciBmYWlsZWQgcXVldWUgcmVxdWVzdAogICAgdmFyIHN0YXR1cyA9IGVycm9yLnJlc3BvbnNlLnN0YXR1czsKCiAgICBpZiAoc3RhdHVzID09PSBTdGF0dXNDb2Rlcy5VTkFVVEhPUklaRUQpIHsKICAgICAgc3RvcmUuZGlzcGF0Y2goInVzZXIvbG9nb3V0Iik7CiAgICAgIHJvdXRlci5wdXNoKCcvbG9naW4nKTsKICAgIH0KICB9IC8vIEFueSBzdGF0dXMgY29kZXMgdGhhdCBmYWxscyBvdXRzaWRlIHRoZSByYW5nZSBvZiAyeHggY2F1c2UgdGhpcyBmdW5jdGlvbiB0byB0cmlnZ2VyCiAgLy8gRG8gc29tZXRoaW5nIHdpdGggcmVzcG9uc2UgZXJyb3IKCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwp2YXIgbWF4QWdlID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9DQUNIRV9NQVhfQUdFID8gcGFyc2VJbnQocHJvY2Vzcy5lbnYuVlVFX0FQUF9DQUNIRV9NQVhfQUdFKSA6IDA7CnZhciBheGlvc0NhY2hlID0gc2V0dXBDYWNoZSh7CiAgbWF4QWdlOiBtYXhBZ2UgKiAxMDAwCn0pOwovKioKICogR2VuZXJpYyBtZXRob2QgdG8gY2FsbCBBUElzCiAqCiAqIEBwYXJhbSB7c3RyaW5nfSAgdXJsIC0gQVBJIFVybAogKiBAcGFyYW0ge3N0cmluZz19IG1ldGhvZCAtICdHRVQnLCAnUFVUJywgJ1BPU1QnLCAnREVMRVRFICwgYW5kICdQQVRDSCcKICogQHBhcmFtIHthbnl9IFtkYXRhXSAtIE9wdGlvbmFsOiBgZGF0YWAgaXMgdGhlIGRhdGEgdG8gYmUgc2VudCBhcyB0aGUgcmVxdWVzdCBib2R5LiBPbmx5IGFwcGxpY2FibGUgZm9yIHJlcXVlc3QgbWV0aG9kcyAnUFVUJywgJ1BPU1QnLCAnREVMRVRFICwgYW5kICdQQVRDSCcKICogV2hlbiBubyBgdHJhbnNmb3JtUmVxdWVzdGAgaXMgc2V0LCBtdXN0IGJlIG9mIG9uZSBvZiB0aGUgZm9sbG93aW5nIHR5cGVzOgogKiAtIHN0cmluZywgcGxhaW4gb2JqZWN0LCBBcnJheUJ1ZmZlciwgQXJyYXlCdWZmZXJWaWV3LCBVUkxTZWFyY2hQYXJhbXMKICogLSBCcm93c2VyIG9ubHk6IEZvcm1EYXRhLCBGaWxlLCBCbG9iCiAqIC0gTm9kZSBvbmx5OiBTdHJlYW0sIEJ1ZmZlcgogKiBAcGFyYW0ge2FueX0gW3BhcmFtc10gLSBPcHRpb25hbDogYHBhcmFtc2AgYXJlIHRoZSBVUkwgcGFyYW1ldGVycyB0byBiZSBzZW50IHdpdGggdGhlIHJlcXVlc3QuIE11c3QgYmUgYSBwbGFpbiBvYmplY3Qgb3IgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0CiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2NhY2hlXSAtIE9wdGlvbmFsOiBBcHBseSBjYWNoaW5nIHRvIGl0CiAqICBAcGFyYW0ge2Jvb2xlYW59IFtxdWV1ZV0gLSBPcHRpb25hbDogQXBwbHkgb2ZmbGluZSBxdWV1ZWluZyB0byBpdAogKiBAcmV0dXJuIHtQcm9taXNlfSBSZXNwb25zZSBmcm9tIEFQSSBhcyByZXR1cm5lZCBieSBBeGlvcwogKi8KCnZhciBhcGkgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGN1c3RvbUNvbmZpZykgewogICAgdmFyIGNvbmZpZywgYmFzZVVSTCwgbmV0d29ya1N0YXR1czsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgLy8gUHJlcGFyZSBjb25maWd1cmF0aW9uCiAgICAgICAgICAgIGNvbmZpZyA9IHsKICAgICAgICAgICAgICB1cmw6IGN1c3RvbUNvbmZpZy51cmwsCiAgICAgICAgICAgICAgbWV0aG9kOiBjdXN0b21Db25maWcubWV0aG9kLAogICAgICAgICAgICAgIGRhdGE6IGN1c3RvbUNvbmZpZy5kYXRhLAogICAgICAgICAgICAgIHBhcmFtczogY3VzdG9tQ29uZmlnLnBhcmFtcwogICAgICAgICAgICB9OwogICAgICAgICAgICBiYXNlVVJMID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX1VSTDsKICAgICAgICAgICAgaWYgKGJhc2VVUkwpIGNvbmZpZy5iYXNlVVJMID0gYmFzZVVSTDsKICAgICAgICAgICAgaWYgKGN1c3RvbUNvbmZpZy5jYWNoZSkgY29uZmlnLmFkYXB0ZXIgPSBheGlvc0NhY2hlLmFkYXB0ZXI7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICByZXR1cm4gT2ZmbGluZUhlbHBlci5nZXROZXR3b3JrU3RhdHVzKCk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBuZXR3b3JrU3RhdHVzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGlmICghKGN1c3RvbUNvbmZpZy5xdWV1ZSAmJiAhbmV0d29ya1N0YXR1cy5jb25uZWN0ZWQpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIWNvbmZpZy5oZWFkZXJzKSBjb25maWcuaGVhZGVycyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb24pLCBjb25maWcuaGVhZGVycyk7CiAgICAgICAgICAgIGVtaXR0ZXIuZW1pdCgicXVldWVUYXNrIiwgewogICAgICAgICAgICAgIGNhbGxiYWNrRXZlbnQ6IGN1c3RvbUNvbmZpZy5jYWxsYmFja0V2ZW50LAogICAgICAgICAgICAgIHBheWxvYWQ6IGNvbmZpZwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBheGlvcyhjb25maWcpKTsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGFwaShfeCkgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Ci8qKgogKiBDbGllbnQgbWV0aG9kIHRvIGRpcmVjdGx5IHBhc3MgY29uZmlndXJhdGlvbiB0byBheGlvcwogKgogKiBAcGFyYW0ge2FueX0gIGNvbmZpZyAtIEFQSSBjb25maWd1cmF0aW9uCiAqIEByZXR1cm4ge1Byb21pc2V9IFJlc3BvbnNlIGZyb20gQVBJIGFzIHJldHVybmVkIGJ5IEF4aW9zCiAqLwoKCnZhciBjbGllbnQgPSBmdW5jdGlvbiBjbGllbnQoY29uZmlnKSB7CiAgcmV0dXJuIGF4aW9zLnJlcXVlc3QoY29uZmlnKTsKfTsKCmV4cG9ydCB7IGFwaSBhcyBkZWZhdWx0LCBjbGllbnQsIGF4aW9zIH07"},{"version":3,"sources":["/home/aniket/Desktop/Hact/preorder/node_modules/eslint-loader/index.js??ref--13-0!/home/aniket/Desktop/Hact/preorder/src/api/index.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setupCache } from 'axios-cache-adapter'\nimport OfflineHelper from '../offline-helper'\nimport emitter from \"../event-bus\"\nimport store from '@/store';\nimport {\n    StatusCodes\n} from 'http-status-codes';\nimport router from '@/router'\n\naxios.interceptors.request.use((config: any) => {\n    const token = store.getters['user/getUserToken'];\n    if (token) {\n        config.headers.Authorization =  'Bearer ' + token;\n        config.headers['Content-Type'] = 'application/json';\n    }\n    return config;\n});\n\naxios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // TODO Handle it in a better way\n    // Currently when the app gets offline, the time between adding a loader and removing it is fractional due to which loader dismiss is called before loader present\n    // which cause loader to run indefinitely\n    // Following gives dismiss loader a delay of 100 microseconds to get both the actions in sync\n    setTimeout(() => emitter.emit(\"dismissLoader\"), 100);\n    if (error.response) {\n        // TODO Handle case for failed queue request\n        const { status } = error.response;\n        if (status === StatusCodes.UNAUTHORIZED) {\n          store.dispatch(\"user/logout\");\n          router.push('/login')\n        }\n    }\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });\n\nconst maxAge = process.env.VUE_APP_CACHE_MAX_AGE ? parseInt(process.env.VUE_APP_CACHE_MAX_AGE) : 0;\nconst axiosCache = setupCache({\n    maxAge: maxAge * 1000\n})\n\n\n/**\n * Generic method to call APIs\n *\n * @param {string}  url - API Url\n * @param {string=} method - 'GET', 'PUT', 'POST', 'DELETE , and 'PATCH'\n * @param {any} [data] - Optional: `data` is the data to be sent as the request body. Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH'\n * When no `transformRequest` is set, must be of one of the following types:\n * - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n * - Browser only: FormData, File, Blob\n * - Node only: Stream, Buffer\n * @param {any} [params] - Optional: `params` are the URL parameters to be sent with the request. Must be a plain object or a URLSearchParams object\n * @param {boolean} [cache] - Optional: Apply caching to it\n *  @param {boolean} [queue] - Optional: Apply offline queueing to it\n * @return {Promise} Response from API as returned by Axios\n */\nconst api = async (customConfig: any) => {\n    // Prepare configuration\n    const config: any = {\n        url: customConfig.url,\n        method: customConfig.method,\n        data: customConfig.data,\n        params: customConfig.params\n    }\n    const baseURL = process.env.VUE_APP_BASE_URL;\n    if (baseURL) config.baseURL = baseURL;\n\n    if(customConfig.cache) config.adapter = axiosCache.adapter;\n\n    const networkStatus =  await OfflineHelper.getNetworkStatus();\n    if (customConfig.queue && !networkStatus.connected) {\n        if (!config.headers) config.headers = { ...axios.defaults.headers.common, ...config.headers };\n\n        emitter.emit(\"queueTask\", {\n            callbackEvent: customConfig.callbackEvent,\n            payload: config\n        });\n    } else {\n        return axios(config);\n    }\n}\n\n/**\n * Client method to directly pass configuration to axios\n *\n * @param {any}  config - API configuration\n * @return {Promise} Response from API as returned by Axios\n */\nconst client = (config: any) => {\n    return axios.request(config);\n}\n\nexport { api as default, client, axios };"],"sourceRoot":""}]}