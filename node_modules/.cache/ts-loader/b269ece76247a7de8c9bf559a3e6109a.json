{"remainingRequest":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js!/home/aniket/Desktop/Hact/preorder/node_modules/ts-loader/index.js??ref--14-2!/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/aniket/Desktop/Hact/preorder/src/views/timezone-modal.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/aniket/Desktop/Hact/preorder/src/views/timezone-modal.vue","mtime":1634884664340},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/babel-loader/lib/index.js","mtime":1634884699504},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/ts-loader/index.js","mtime":1634884699568},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js","mtime":1634884699380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9hbmlrZXQvRGVza3RvcC9IYWN0L3ByZW9yZGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgSW9uQnV0dG9ucywgSW9uQnV0dG9uLCBJb25Db250ZW50LCBJb25GYWIsIElvbkZhYkJ1dHRvbiwgSW9uSGVhZGVyLCBJb25JdGVtLCBJb25JY29uLCBJb25MYWJlbCwgSW9uUmFkaW9Hcm91cCwgSW9uUmFkaW8sIElvbkxpc3QsIElvblNlYXJjaGJhciwgSW9uVGl0bGUsIElvblRvb2xiYXIsIG1vZGFsQ29udHJvbGxlciwgYWxlcnRDb250cm9sbGVyIH0gZnJvbSAiQGlvbmljL3Z1ZSI7CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCB9IGZyb20gInZ1ZSI7CmltcG9ydCB7IGNsb3NlLCBzYXZlIH0gZnJvbSAiaW9uaWNvbnMvaWNvbnMiOwppbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gIkAvc3RvcmUiOwppbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gIkAvc2VydmljZXMvVXNlclNlcnZpY2UiOwppbXBvcnQgeyBoYXNFcnJvciB9IGZyb20gJ0AvdXRpbHMnOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCAibW9tZW50LXRpbWV6b25lIjsKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAiVGltZVpvbmVNb2RhbCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXJ5U3RyaW5nOiAnJywKICAgICAgZmlsdGVyZWRUaW1lWm9uZXM6IFtdLAogICAgICB0aW1lWm9uZXM6IFtdLAogICAgICB0aW1lWm9uZUlkOiAnJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICBtZXRob2RzOiB7CiAgICBjbG9zZU1vZGFsOiBmdW5jdGlvbiBjbG9zZU1vZGFsKCkgewogICAgICBtb2RhbENvbnRyb2xsZXIuZGlzbWlzcyh7CiAgICAgICAgZGlzbWlzc2VkOiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIHNhdmVBbGVydDogZnVuY3Rpb24gc2F2ZUFsZXJ0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgbWVzc2FnZSwgYWxlcnQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgbWVzc2FnZSA9IF90aGlzLiR0KCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gY2hhbmdlIHRoZSB0aW1lIHpvbmUgdG8/IiwgewogICAgICAgICAgICAgICAgICB0aW1lWm9uZUlkOiBfdGhpcy50aW1lWm9uZUlkCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGFsZXJ0Q29udHJvbGxlci5jcmVhdGUoewogICAgICAgICAgICAgICAgICBoZWFkZXI6IF90aGlzLiR0KCJVcGRhdGUgdGltZSB6b25lIiksCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsCiAgICAgICAgICAgICAgICAgIGJ1dHRvbnM6IFt7CiAgICAgICAgICAgICAgICAgICAgdGV4dDogX3RoaXMuJHQoIkNhbmNlbCIpCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICB0ZXh0OiBfdGhpcy4kdCgiQ29uZmlybSIpLAogICAgICAgICAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7CiAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRVc2VyVGltZVpvbmUoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgYWxlcnQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgYWxlcnQucHJlc2VudCgpKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGVzY2FwZVJlZ0V4cDogZnVuY3Rpb24gZXNjYXBlUmVnRXhwKHRleHQpIHsKICAgICAgLy9UT0RPIEhhbmRsZSBpdCBpbiBhIGJldHRlciB3YXkKICAgICAgLy8gQ3VycmVudGx5IHdoZW4gdGhlIHVzZXIgdHlwZXMgc3BlY2lhbCBjaGFyYWN0ZXIgYXMgaXQgcGFydCBvZiBSZWdleCBleHByZXNzaW9ucyBpdCBicmVha3MgdGhlIGNvZGUKICAgICAgLy8gc28gcmVtb3ZlZCB0aGUgY2hhcmFjdGVycyBmb3Igbm93CiAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoL1stW1xde30oKSorPy4sXFxeJHwjXHNdL2csICdcXCQmJyk7CiAgICB9LAogICAgZmluZFRpbWVab25lOiBmdW5jdGlvbiBmaW5kVGltZVpvbmUoKSB7CiAgICAgIHZhciByZWd1bGFyRXhwID0gbmV3IFJlZ0V4cCgiIi5jb25jYXQodGhpcy5lc2NhcGVSZWdFeHAodGhpcy5xdWVyeVN0cmluZykpLCAnaScpOwogICAgICB0aGlzLmZpbHRlcmVkVGltZVpvbmVzID0gdGhpcy50aW1lWm9uZXMuZmlsdGVyKGZ1bmN0aW9uICh0aW1lWm9uZSkgewogICAgICAgIHJldHVybiByZWd1bGFyRXhwLnRlc3QodGltZVpvbmUuaWQpIHx8IHJlZ3VsYXJFeHAudGVzdCh0aW1lWm9uZS5sYWJlbCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldEF2YWlsYWJsZVRpbWVab25lczogZnVuY3Rpb24gZ2V0QXZhaWxhYmxlVGltZVpvbmVzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBVc2VyU2VydmljZS5nZXRBdmFpbGFibGVUaW1lWm9uZXMoKS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXNwLnN0YXR1cyA9PT0gMjAwICYmICFoYXNFcnJvcihyZXNwKSkgewogICAgICAgICAgICAgICAgICAgIC8vIFRPRE8gRkl4IHRoaXMgYXMgZml4ZWQgb24gYmFja2VuZAogICAgICAgICAgICAgICAgICAgIC8vIEN1cnJlbnRseSBiYWNrZW5kIEFQSSByZXR1cm5zIHNvbWUgb2YgdGhlIGxlZ2FjeSB0aW1lem9uZXMgd2hpY2ggYXJlIG5vdCBmb3VuZCBpbiBtb21lbnQgbGlzdAogICAgICAgICAgICAgICAgICAgIC8vIER1ZSB0byB3aGljaCBpZiB3ZSBzZXQgdGhlbSB3ZSBnZXQgYW4gZXJyb3IKICAgICAgICAgICAgICAgICAgICAvLyBGaWx0ZXJlZCB0aGVtIG91dCB0aWxsIGl0IGlzIGZpeGVkIGF0IGJhY2tlbmQKICAgICAgICAgICAgICAgICAgICBfdGhpczIudGltZVpvbmVzID0gcmVzcC5kYXRhLmZpbHRlcihmdW5jdGlvbiAodGltZVpvbmUpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtb21lbnQudHouem9uZSh0aW1lWm9uZS5pZCk7CiAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgIF90aGlzMi5maW5kVGltZVpvbmUoKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNlbGVjdFNlYXJjaEJhclRleHQ6IGZ1bmN0aW9uIHNlbGVjdFNlYXJjaEJhclRleHQoZXZlbnQpIHsKICAgICAgZXZlbnQudGFyZ2V0LmdldElucHV0RWxlbWVudCgpLnRoZW4oZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnNlbGVjdCgpOwogICAgICB9KTsKICAgIH0sCiAgICBzZXRVc2VyVGltZVpvbmU6IGZ1bmN0aW9uIHNldFVzZXJUaW1lWm9uZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF90aGlzMy5zdG9yZS5kaXNwYXRjaCgidXNlci9zZXRVc2VyVGltZVpvbmUiLCB7CiAgICAgICAgICAgICAgICAgICJ0eklkIjogX3RoaXMzLnRpbWVab25lSWQKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBfdGhpczMuY2xvc2VNb2RhbCgpOwogICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMuZ2V0QXZhaWxhYmxlVGltZVpvbmVzKCk7CiAgfSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoKSB7CiAgICB2YXIgc3RvcmUgPSB1c2VTdG9yZSgpOwogICAgcmV0dXJuIHsKICAgICAgY2xvc2U6IGNsb3NlLAogICAgICBzYXZlOiBzYXZlLAogICAgICBzdG9yZTogc3RvcmUKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBJb25CdXR0b25zOiBJb25CdXR0b25zLAogICAgSW9uQnV0dG9uOiBJb25CdXR0b24sCiAgICBJb25Db250ZW50OiBJb25Db250ZW50LAogICAgSW9uRmFiOiBJb25GYWIsCiAgICBJb25GYWJCdXR0b246IElvbkZhYkJ1dHRvbiwKICAgIElvbkhlYWRlcjogSW9uSGVhZGVyLAogICAgSW9uSWNvbjogSW9uSWNvbiwKICAgIElvbkl0ZW06IElvbkl0ZW0sCiAgICBJb25MYWJlbDogSW9uTGFiZWwsCiAgICBJb25MaXN0OiBJb25MaXN0LAogICAgSW9uUmFkaW9Hcm91cDogSW9uUmFkaW9Hcm91cCwKICAgIElvblJhZGlvOiBJb25SYWRpbywKICAgIElvblNlYXJjaGJhcjogSW9uU2VhcmNoYmFyLAogICAgSW9uVGl0bGU6IElvblRpdGxlLAogICAgSW9uVG9vbGJhcjogSW9uVG9vbGJhcgogIH0KfSk7"},{"version":3,"sources":["/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/aniket/Desktop/Hact/preorder/src/views/timezone-modal.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { \n  IonButtons,\n  IonButton,\n  IonContent,\n  IonFab,\n  IonFabButton,\n  IonHeader,\n  IonItem,\n  IonIcon,\n  IonLabel,\n  IonRadioGroup,\n  IonRadio,\n  IonList,\n  IonSearchbar,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  alertController } from \"@ionic/vue\";\nimport { defineComponent } from \"vue\";\nimport { close, save } from \"ionicons/icons\";\nimport { useStore } from \"@/store\";\nimport { UserService } from \"@/services/UserService\";\nimport { hasError } from '@/utils'\nimport moment from 'moment';\nimport \"moment-timezone\";\n\nexport default defineComponent({\n  name: \"TimeZoneModal\",\n  data() {\n    return {\n      queryString: '',\n      filteredTimeZones: [],\n      timeZones: [],\n      timeZoneId: ''\n    }\n  },\n  computed: {\n  },\n  methods: {\n    closeModal() {\n      modalController.dismiss({ dismissed: true });\n    },\n    async saveAlert() {\n      const message = this.$t(\"Are you sure you want to change the time zone to?\", { timeZoneId: this.timeZoneId });\n      const alert = await alertController.create({\n        header: this.$t(\"Update time zone\"),\n        message,\n        buttons: [\n            {\n              text: this.$t(\"Cancel\"),\n            },\n            {\n              text: this.$t(\"Confirm\"),\n              handler: () => {\n                this.setUserTimeZone();\n                }\n              }\n            ],\n      });\n      return alert.present();\n    },\n    escapeRegExp(text: string) {\n      //TODO Handle it in a better way\n      // Currently when the user types special character as it part of Regex expressions it breaks the code\n      // so removed the characters for now\n      return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    },\n    findTimeZone() { \n      const regularExp = new RegExp(`${this.escapeRegExp(this.queryString)}`, 'i');\n      this.filteredTimeZones = this.timeZones.filter((timeZone: any) => {\n        return regularExp.test(timeZone.id) || regularExp.test(timeZone.label);\n      });\n    },\n    async getAvailableTimeZones() {\n      UserService.getAvailableTimeZones().then((resp: any) => {\n        if (resp.status === 200 && !hasError(resp)) {\n          // TODO FIx this as fixed on backend\n          // Currently backend API returns some of the legacy timezones which are not found in moment list\n          // Due to which if we set them we get an error\n          // Filtered them out till it is fixed at backend\n          this.timeZones = resp.data.filter((timeZone: any) => {\n            return moment.tz.zone(timeZone.id);\n          });\n          this.findTimeZone();\n        }\n      })\n    },\n    selectSearchBarText(event: any) {\n      event.target.getInputElement().then((element: any) => {\n        element.select();\n      })\n    },\n    async setUserTimeZone() {\n      return this.store.dispatch(\"user/setUserTimeZone\", {\n          \"tzId\": this.timeZoneId\n      }).then(() => {\n        this.closeModal()\n      })\n    }\n  },\n  beforeMount () {\n    this.getAvailableTimeZones();\n  },\n  setup() {\n    const store = useStore();\n    return {\n      close,\n      save,\n      store\n    };\n  },\n  components: { \n    IonButtons,\n    IonButton,\n    IonContent,\n    IonFab,\n    IonFabButton,\n    IonHeader,\n    IonIcon,\n    IonItem,\n    IonLabel,\n    IonList,\n    IonRadioGroup,\n    IonRadio,\n    IonSearchbar,\n    IonTitle,\n    IonToolbar \n    },\n});\n"],"sourceRoot":""}]}