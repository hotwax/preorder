{"remainingRequest":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/aniket/Desktop/Hact/preorder/src/views/orders.vue?vue&type=style&index=0&id=56ccc202&scoped=true&lang=css","dependencies":[{"path":"/home/aniket/Desktop/Hact/preorder/src/views/orders.vue","mtime":1634894300116},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/css-loader/dist/cjs.js","mtime":1634884699328},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634884699752},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/postcss-loader/src/index.js","mtime":1634884699488},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js","mtime":1634884699380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIFRhYmxlIG9mIGNvbnRlbnRzCgogIDEuIERlc2t0b3AgSGVhZGVyCgogIDIuIERlc2t0b3AgT3JkZXIKICAgICAgLSBPcmRlciBIZWFkZXIKICAgICAgICAtIE9yZGVyIElECiAgICAgICAgLSBPcmRlciBUYWdzCiAgICAgICAgLSBPcmRlciBNZXRhZGF0YQogICAgICAtIE9yZGVyIEl0ZW1zCgogIDMuIE1vYmlsZSBIZWFkZXIKCiAgNC4gTW9iaWxlIE9yZGVyCiovCgovKiA9PT09PT09PT09PT09PQogMS4gRGVza3RvcCBIZWFkZXIKICAgPT09PT09PT09PT09PT0gKi8KCi5oZWFkZXIgewogIGRpc3BsYXk6IGdyaWQ7CiAgZ3JpZDoKICAgICJzZWFyY2ggZmlsdGVycyIKICAgICJyZXN1bHRzIGZpbHRlcnMiCiAgICAvMWZyIDFmcjsKICBncmlkLWdhcDogMTZweDsKICBwYWRkaW5nOiAxNnB4OwogIG1hcmdpbi1ib3R0b206IDE2cHg7Cn0KCi5zZWFyY2ggewogIGdyaWQtYXJlYTogc2VhcmNoOwp9CgouZmlsdGVycyB7CiAgZ3JpZC1hcmVhOiBmaWx0ZXJzOwp9CgoucmVzdWx0cyB7CiAgZ3JpZC1hcmVhOiByZXN1bHRzOwogIGFsaWduLXNlbGY6IGVuZDsKfQoKLm8tdGl0bGUgewogIGZvbnQtZmFtaWx5OiBtb250c2VycmF0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgovKiA9PT09PT09PT09PT09PQogMi4gRGVza3RvcCBPcmRlcgogICA9PT09PT09PT09PT09PSAqLwoKLm9yZGVyIHsKICBib3JkZXItdG9wOiAxcHggc29saWQ7CiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTsKICBtYXJnaW46IDAgMTZweDsKfQoKQGltcG9ydCB1cmwoImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9T3BlbitTYW5zOndnaHRANTAwJmRpc3BsYXk9c3dhcCIpOwouaS1sYWJlbCB7CiAgZm9udC1mYW1pbHk6ICJPcGVuIFNhbnMiLCBzYW5zLXNlcmlmOwp9Cgoub3JkZXItaGVhZGVyIHsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQ6ICJpZCB0YWdzIG1ldGFkYXRhIiAvIG1heC1jb250ZW50IDFmciBtaW5tYXgobWluLWNvbnRlbnQsIG1heC1jb250ZW50KTsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Cgoub3JkZXItaWQgewogIGdyaWQtYXJlYTogaWQ7Cn0KCi5vcmRlci10YWdzIHsKICBncmlkLWFyZWE6IHRhZ3M7CgogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Cgoub3JkZXItbWV0YWRhdGEgewogIGdyaWQtYXJlYTogbWV0YWRhdGE7CgogIGp1c3RpZnktc2VsZjogZW5kOwogIHBhZGRpbmctcmlnaHQ6IDEwcHg7Cn0KCi5vcmRlci1tZXRhZGF0YSBpb24tbm90ZSB7CiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsKfQoKLm9yZGVyLWl0ZW1zIHsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDM0M3B4LCAxZnIpKTsKICBnYXA6IDEwcHg7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkgewogIC8qID09PT09PT09PT09PT09CiAgIDMuIE1vYmlsZSBIZWFkZXIKICAgICA9PT09PT09PT09PT09PSAqLwoKICAuaGVhZGVyIHsKICAgIGdyaWQ6CiAgICAgICJzZWFyY2giCiAgICAgICJmaWx0ZXJzIgogICAgICAicmVzdWx0cyIKICAgICAgLyBhdXRvOwogICAgcGFkZGluZzogMDsKICB9CgogIC5yZXN1bHRzIHsKICAgIHBhZGRpbmc6IDE2cHg7CiAgfQogICNlcnJvciB7CiAgICBmb250LWZhbWlseTogIk9wZW4gU2FucyIsIHNhbnMtc2VyaWY7CiAgfQoKICAvKiA9PT09PT09PT09PT09PQogICA0LiBNb2JpbGUgT3JkZXIKICAgICA9PT09PT09PT09PT09PSAqLwoKICAub3JkZXItaGVhZGVyIHsKICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6CiAgICAgICJpZCBtZXRhZGF0YSIKICAgICAgInRhZ3MgdGFncyI7CiAgfQp9Cg=="},{"version":3,"sources":["/home/aniket/Desktop/Hact/preorder/src/views/orders.vue"],"names":[],"mappings":"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","file":"/home/aniket/Desktop/Hact/preorder/src/views/orders.vue","sourceRoot":"","sourcesContent":["<template>\n  <ion-page>\n    <ion-header :translucent=\"true\">\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title class=\"o-title\">{{ $t(\"Orders\") }}</ion-title>\n        <ion-buttons slot=\"secondary\">\n          <!-- TODO Add internationalisation -->\n          <ion-button @click=\"deselectAlert()\"\n            >{{ selectedItemsCount }} {{ $t(\"item selected\") }}\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"end\">\n          <ion-button @click=\"openActiveJobs\">\n            <ion-icon\n              :color=\"isJobPending ? 'warning' : ''\"\n              :icon=\"hourglass\"\n              slot=\"icon-only\"\n            />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content :fullscreen=\"true\">\n      <div class=\"header\">\n        <div class=\"search\">\n          <ion-searchbar\n            @ionFocus=\"selectSearchBarText($event)\"\n            @ionClear=\"\n              query.queryString = '';\n              updateQuery();\n            \"\n            :value=\"query.queryString\"\n            v-on:keyup.enter=\"\n              query.queryString = $event.target.value;\n              updateQuery();\n            \"\n          >\n          </ion-searchbar>\n        </div>\n\n        <div class=\"filters\">\n          <ion-item>\n            <ion-label class=\"i-label\">{{ $t(\"Ordered after\") }}</ion-label>\n            <ion-chip slot=\"end\">\n              <!-- \n                TODO Need to fix this\n                :value is a recommended way for vuex state but value is not working for date when resetting with close button used v-model instead of :value\n                https://vuex.vuejs.org/guide/forms.html#two-way-computed-property\n                -->\n              <ion-input\n                v-model=\"query.orderedAfter\"\n                @ionChange=\"updateQuery()\"\n                type=\"date\"\n              />\n              <ion-icon\n                @click=\"query.orderedAfter = ''\"\n                v-if=\"query.orderedAfter\"\n                :icon=\"close\"\n              />\n            </ion-chip>\n          </ion-item>\n          <ion-item>\n            <ion-label class=\"i-label\">{{ $t(\"Ordered before\") }}</ion-label>\n            <ion-chip slot=\"end\">\n              <ion-input\n                v-model=\"query.orderedBefore\"\n                @ionChange=\"\n                  query.orderedBefore = $event.target.value;\n                  updateQuery();\n                \"\n                type=\"date\"\n              />\n              <ion-icon\n                @click=\"query.orderedBefore = ''\"\n                v-if=\"query.orderedBefore\"\n                :icon=\"close\"\n              />\n            </ion-chip>\n          </ion-item>\n          <ion-item>\n            <ion-label class=\"i-label\">{{ $t(\"Promised after\") }}</ion-label>\n            <ion-chip slot=\"end\">\n              <ion-input\n                v-model=\"query.promisedAfter\"\n                @ionChange=\"\n                  query.promisedAfter = $event.target.value;\n                  updateQuery();\n                \"\n                type=\"date\"\n              />\n              <ion-icon\n                @click=\"query.promisedAfter = ''\"\n                v-if=\"query.promisedAfter\"\n                :icon=\"close\"\n              />\n            </ion-chip>\n          </ion-item>\n          <ion-item>\n            <ion-label class=\"i-label\">{{ $t(\"Promised before\") }}</ion-label>\n            <ion-chip slot=\"end\">\n              <ion-input\n                v-model=\"query.promisedBefore\"\n                @ionChange=\"\n                  query.promisedBefore = $event.target.value;\n                  updateQuery();\n                \"\n                type=\"date\"\n              />\n              <ion-icon\n                @click=\"query.promisedBefore = ''\"\n                v-if=\"query.promisedBefore\"\n                :icon=\"close\"\n              />\n            </ion-chip>\n          </ion-item>\n          <ion-item>\n            <ion-label class=\"i-label\">{{ $t(\"Loyalty status\") }}</ion-label>\n            <ion-chip slot=\"end\">\n              <ion-icon :icon=\"ribbon\" />\n              <ion-select\n                :placeholder=\"$t('select')\"\n                v-model=\"query.cusotmerLoyalty\"\n                @ionChange=\"updateQuery()\"\n                interface=\"popover\"\n                interface-options=\"{showBackdrop:false}\"\n              >\n                <ion-select-option\n                  v-for=\"(key, value) in cusotmerLoyaltyOptions\"\n                  v-bind:key=\"key\"\n                  :value=\"value\"\n                  >{{ key }}</ion-select-option\n                >\n              </ion-select>\n              <ion-icon\n                @click=\"query.cusotmerLoyalty = ''\"\n                v-if=\"query.cusotmerLoyalty\"\n                :icon=\"close\"\n              />\n            </ion-chip>\n          </ion-item>\n          <ion-item lines=\"none\">\n            <ion-label class=\"i-label\">{{\n              $t(\"Only orders without promise date\")\n            }}</ion-label>\n            <ion-toggle\n              slot=\"end\"\n              @ionChange=\"\n                query.hasPromisedDate = !query.hasPromisedDate;\n                updateQuery();\n              \"\n              :checked=\"!query.hasPromisedDate\"\n            ></ion-toggle>\n          </ion-item>\n        </div>\n\n        <div class=\"results\">\n          <ion-badge color=\"success\"\n            >{{ preorderCount }} {{ $t(\"items preordered\") }}</ion-badge\n          >\n          <ion-badge color=\"secondary\"\n            >{{ ordersTotal }} {{ $t(\"orders\") }}</ion-badge\n          >\n        </div>\n      </div>\n\n      <!-- Empty state -->\n      <div class=\"empty-state\" v-if=\"orders.length === 0\">\n        <!-- No result -->\n        <p v-if=\"query.hasUpdated\">{{ $t(\"No results found\") }}</p>\n        <p id=\"error\">\n          {{\n            $t(\n              \"Enter an order ID, product name, style name, SKU, customer name, UPCA or external ID\"\n            )\n          }}\n        </p>\n      </div>\n\n      <!-- Orders -->\n      <div v-else>\n        <div class=\"order\" v-bind:key=\"order.orderId\" v-for=\"order in orders\">\n          <div class=\"order-header\">\n            <div class=\"order-id\">\n              <ion-item lines=\"none\">\n                <ion-label class=\"i-label\">\n                  <h1>{{ order.doclist.docs[0].orderId }}</h1>\n                  <p>{{ order.doclist.docs[0].customerPartyName }}</p>\n                </ion-label>\n              </ion-item>\n            </div>\n\n            <div class=\"order-tags\">\n              <!-- TODO Fix this. We need to call same filter twice -->\n              <ion-chip\n                @click=\"\n                  copyToClipboard(\n                    $filters.getOrderIdentificationId(\n                      order.doclist.docs[0].orderIdentifications,\n                      orderIdentificationTypeId\n                    )\n                  )\n                \"\n                outline\n                v-if=\"\n                  $filters.getOrderIdentificationId(\n                    order.doclist.docs[0].orderIdentifications,\n                    orderIdentificationTypeId\n                  )\n                \"\n              >\n                <ion-icon :icon=\"pricetag\" />\n                <ion-label class=\"i-label\">{{\n                  $filters.getOrderIdentificationId(\n                    order.doclist.docs[0].orderIdentifications,\n                    orderIdentificationTypeId\n                  )\n                }}</ion-label>\n              </ion-chip>\n\n              <ion-chip\n                outline\n                v-if=\"\n                  $filters.getCustomerLoyalty(\n                    order.doclist.docs[0].orderNotes,\n                    cusotmerLoyaltyOptions\n                  )\n                \"\n              >\n                <ion-icon :icon=\"ribbon\" />\n                <ion-label class=\"i-label\">{{\n                  $filters.getCustomerLoyalty(\n                    order.doclist.docs[0].orderNotes,\n                    cusotmerLoyaltyOptions\n                  )\n                }}</ion-label>\n              </ion-chip>\n            </div>\n\n            <div class=\"order-metadata\">\n              <ion-note\n                >{{ $t(\"Order placed on\") }}\n                {{\n                  $filters.formatUtcDate(\n                    order.doclist.docs[0].orderDate,\n                    \"YYYY-MM-DDTHH:mm:ssZ\"\n                  )\n                }}</ion-note\n              >\n            </div>\n          </div>\n\n          <div class=\"order-items\">\n            <ion-card\n              v-bind:key=\"item.orderItemSeqId\"\n              v-for=\"item in order.doclist.docs\"\n            >\n              <ion-item lines=\"none\">\n                <ion-thumbnail slot=\"start\">\n                  <!-- TODO Create a separate component that handles default image -->\n                  <Image :src=\"getProduct(item.productId).mainImageUrl\"></Image>\n                </ion-thumbnail>\n                <ion-label class=\"i-label\">\n                  <h2>\n                    {{\n                      item.parentProductName\n                        ? item.parentProductName\n                        : item.productName\n                    }}\n                  </h2>\n                  <p>\n                    {{ $t(\"Color\") }} :\n                    {{\n                      $filters.getFeature(\n                        getProduct(item.productId).featureHierarchy,\n                        \"1/COLOR/\"\n                      )\n                    }}\n                  </p>\n                  <p>\n                    {{ $t(\"Size\") }} :\n                    {{\n                      $filters.getFeature(\n                        getProduct(item.productId).featureHierarchy,\n                        \"1/SIZE/\"\n                      )\n                    }}\n                  </p>\n                </ion-label>\n              </ion-item>\n              <ion-item lines=\"none\">\n                <ion-label class=\"i-label\">{{\n                  $t(\"Available to promise\")\n                }}</ion-label>\n                <p slot=\"end\">{{ getProductStock(item.productId) }}</p>\n              </ion-item>\n              <ion-item lines=\"full\">\n                <ion-label class=\"i-label\">{{ $t(\"Promised date\") }}</ion-label>\n                <p slot=\"end\">\n                  {{\n                    item.promisedDatetime\n                      ? $filters.formatUtcDate(\n                          item.promisedDatetime,\n                          \"YYYY-MM-DDTHH:mm:ssZ\"\n                        )\n                      : \"-\"\n                  }}\n                </p>\n              </ion-item>\n              <ion-item\n                button\n                @click=\"item.isChecked = !item.isChecked\"\n                lines=\"none\"\n              >\n                <ion-checkbox\n                  :modelValue=\"item.isChecked\"\n                  @ionChange=\"selectItem($event, item)\"\n                  slot=\"start\"\n                ></ion-checkbox>\n                <ion-label class=\"i-label\">{{ $t(\"Select item\") }}</ion-label>\n                <ion-button\n                  fill=\"clear\"\n                  color=\"medium\"\n                  @click.stop=\"openPopover($event, item)\"\n                >\n                  <ion-icon slot=\"icon-only\" :icon=\"ellipsisVertical\" />\n                </ion-button>\n              </ion-item>\n            </ion-card>\n          </div>\n        </div>\n\n        <ion-infinite-scroll\n          @ionInfinite=\"loadMoreOrders($event)\"\n          threshold=\"100px\"\n          id=\"infinite-scroll\"\n          :disabled=\"!isScrolleable\"\n        >\n          <ion-infinite-scroll-content\n            loading-spinner=\"crescent\"\n            :loading-text=\"$t('Loading')\"\n          ></ion-infinite-scroll-content>\n        </ion-infinite-scroll>\n      </div>\n    </ion-content>\n\n    <ion-footer>\n      <ion-toolbar>\n        <ion-buttons slot=\"end\">\n          <ion-button\n            :disabled=\"!selectedItemsCount\"\n            @click=\"releaseAlert\"\n            fill=\"outline\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            <ion-icon slot=\"start\" :icon=\"send\" />{{ $t(\"Release\") }}\n          </ion-button>\n          <ion-button\n            :disabled=\"!selectedItemsCount\"\n            @click=\"openWarehouseList(selectedItems)\"\n            fill=\"outline\"\n            color=\"dark\"\n            size=\"small\"\n          >\n            <ion-icon slot=\"start\" :icon=\"business\" />{{\n              $t(\"Release to a warehouse\")\n            }}\n          </ion-button>\n          <ion-button\n            :disabled=\"!selectedItemsCount\"\n            @click=\"editPromiseDate\"\n            fill=\"outline\"\n            color=\"dark\"\n            size=\"small\"\n          >\n            <ion-icon slot=\"start\" :icon=\"calendar\" />{{\n              $t(\"Edit promise date\")\n            }}\n          </ion-button>\n          <ion-button\n            :disabled=\"!selectedItemsCount\"\n            @click=\"cancelAlert\"\n            fill=\"outline\"\n            color=\"danger\"\n            size=\"small\"\n          >\n            <ion-icon slot=\"start\" :icon=\"closeCircle\" /> {{ $t(\"Cancel\") }}\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-footer>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonBadge,\n  IonButtons,\n  IonButton,\n  IonCard,\n  IonChip,\n  IonCheckbox,\n  IonContent,\n  IonFooter,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonMenuButton,\n  IonInput,\n  IonNote,\n  IonPage,\n  IonSelect,\n  IonSelectOption,\n  IonSearchbar,\n  IonThumbnail,\n  IonTitle,\n  IonToggle,\n  IonToolbar,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  alertController,\n  modalController,\n  popoverController,\n} from \"@ionic/vue\";\nimport { defineComponent } from \"vue\";\nimport WarehouseModal from \"./warehouse-modal.vue\";\nimport BackgroundJobModal from \"./background-job-modal.vue\";\nimport PromiseDateModal from \"./promise-date-modal.vue\";\nimport Popover from \"../views/order-popover.vue\";\nimport {\n  pricetag,\n  ribbon,\n  ellipsisVertical,\n  send,\n  business,\n  calendar,\n  closeCircle,\n  hourglass,\n  close,\n} from \"ionicons/icons\";\nimport { useStore } from \"@/store\";\nimport { mapGetters } from \"vuex\";\nimport { showToast } from \"@/utils\";\nimport { Plugins } from \"@capacitor/core\";\nimport Image from \"@/components/Image.vue\";\n\nconst { Clipboard } = Plugins;\n\nexport default defineComponent({\n  name: \"orders\",\n  components: {\n    IonBadge,\n    IonButtons,\n    IonButton,\n    IonCard,\n    IonChip,\n    IonCheckbox,\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonInput,\n    IonItem,\n    IonIcon,\n    IonLabel,\n    IonMenuButton,\n    IonNote,\n    IonPage,\n    IonSelect,\n    IonSelectOption,\n    IonSearchbar,\n    IonThumbnail,\n    IonTitle,\n    IonToggle,\n    IonToolbar,\n    IonInfiniteScroll,\n    IonInfiniteScrollContent,\n    Image,\n  },\n  data() {\n    return {\n      orderIdentificationTypeId: process.env.VUE_APP_ORD_IDENT_TYPE_ID,\n      cusotmerLoyaltyOptions: JSON.parse(\n        process.env?.VUE_APP_CUST_LOYALTY_OPTIONS\n      ),\n    };\n  },\n  computed: {\n    ...mapGetters({\n      orders: \"order/getList\",\n      preorderCount: \"order/getListPreorders\",\n      ordersTotal: \"order/getListTotal\",\n      isScrolleable: \"order/isScrolleable\",\n      getProductStock: \"stock/getProductStock\",\n      getProduct: \"product/getProduct\",\n      isJobPending: \"job/isJobPending\",\n      jobTotal: \"job/getTotal\",\n      selectedItems: \"order/getSelectedItems\",\n      getSelectedItemsToRelease: \"order/getSelectedItemsToRelease\",\n      selectedItemsToCancel: \"order.getSelectedItemsToCancel\",\n      selectedItemsCount: \"order/getSelectedItemsCount\",\n      userProfile: \"user/getUserProfile\",\n      query: \"order/getQuery\",\n    }),\n  },\n  methods: {\n    updateQuery() {\n      this.query.viewSize = parseInt(process.env.VUE_APP_VIEW_SIZE);\n      this.query.viewIndex = 0;\n      this.store.dispatch(\"order/updateQuery\", { query: this.query });\n    },\n    async loadMoreOrders(event: any) {\n      this.query.viewIndex = Math.ceil(\n        this.orders.length / process.env.VUE_APP_VIEW_SIZE\n      );\n      this.store\n        .dispatch(\"order/updateQuery\", { query: this.query })\n        .then(() => {\n          event.target.complete();\n        });\n    },\n    async releaseItems() {\n      const selectedItems = this.getSelectedItemsToRelease(\"_NA_\", \"RELEASED\"); // TODO Make it configurable\n      const json = JSON.stringify(selectedItems);\n      const blob = new Blob([json], { type: \"application/json\" });\n      const formData = new FormData();\n      const fileName = \"ReleaseItems_\" + Date.now() + \".json\";\n      formData.append(\"uploadedFile\", blob, fileName);\n      formData.append(\"configId\", \"MDM_REL_ORD_ITM_JSON\");\n      this.deselectSelectedItems();\n      return this.store\n        .dispatch(\"order/releaseItems\", {\n          headers: {\n            \"Content-Type\": \"multipart/form-data;\",\n          },\n          data: formData,\n        })\n        .then(() => {\n          // TODO Find a better place to call this\n          this.store.dispatch(\"order/removeItems\", { items: selectedItems });\n        });\n    },\n    async cancelItems() {\n      const selectedItems = this.selectedItemsToCancel;\n      const json = JSON.stringify(selectedItems);\n      const blob = new Blob([json], { type: \"application/json\" });\n      const formData = new FormData();\n      const fileName = \"CancelItems_\" + Date.now() + \".json\";\n      formData.append(\"uploadedFile\", blob, fileName);\n      formData.append(\"configId\", \"MDM_CAN_ORD_ITM_JSON\");\n      this.deselectSelectedItems();\n      return this.store\n        .dispatch(\"order/cancelItems\", {\n          headers: {\n            \"Content-Type\": \"multipart/form-data;\",\n          },\n          data: formData,\n        })\n        .then(() => {\n          // TODO Find a better place to call this\n          this.store.dispatch(\"order/removeItems\", { items: selectedItems });\n        });\n    },\n    async deselectAlert() {\n      const alert = await alertController.create({\n        header: this.$t(\"Deselect items\"),\n        message: this.$t(\"Deselect the selected order items\", {\n          count: this.selectedItems.length,\n        }),\n        buttons: [\n          {\n            text: this.$t(\"Cancel\"),\n            role: \"cancel\",\n            cssClass: \"secondary\",\n          },\n          {\n            text: this.$t(\"Deselect\"),\n            handler: () => {\n              this.deselectSelectedItems();\n            },\n          },\n        ],\n      });\n      return alert.present();\n    },\n    async releaseAlert() {\n      const message =\n        (this.jobTotal > 0\n          ? (this.jobTotal === 1\n              ? this.$t(\"There is a job already pending.\")\n              : this.$t(\"There are jobs already pending.\", {\n                  count: this.jobTotal,\n                })) + \" \"\n          : \"\") +\n        this.$t(\n          \"preorders will be automatically brokered and assigned for fulfillment.\",\n          { count: this.selectedItems.length }\n        );\n      const alert = await alertController.create({\n        header: this.$t(\"Release orders\"),\n        cssClass: \"alert-message\",\n        message,\n        buttons: [\n          {\n            text: this.$t(\"Cancel\"),\n            role: \"cancel\",\n            cssClass: \"secondary\",\n          },\n          {\n            text: this.$t(\"Release\"),\n            handler: () => {\n              this.releaseItems();\n            },\n          },\n        ],\n      });\n      return alert.present();\n    },\n    async cancelAlert() {\n      const message =\n        (this.jobTotal > 0\n          ? (this.jobTotal === 1\n              ? this.$t(\"There is a job already pending.\")\n              : this.$t(\"There are jobs already pending.\", {\n                  count: this.jobTotal,\n                })) + \" \"\n          : \"\") +\n        this.$t(\"preorders will be cancelled. This action cannot be undone.\", {\n          count: this.selectedItems.length,\n        });\n      const alert = await alertController.create({\n        header: this.$t(\"Cancel orders\"),\n        message,\n        buttons: [\n          {\n            text: this.$t(\"Don't cancel\"),\n            role: \"cancel\",\n            cssClass: \"secondary\",\n          },\n          {\n            text: this.$t(\"Confirm\"),\n            handler: () => {\n              this.cancelItems();\n            },\n          },\n        ],\n      });\n      return alert.present();\n    },\n    async openWarehouseList() {\n      const warehousemodal = await modalController.create({\n        component: WarehouseModal,\n        cssClass: \"my-custom-class\",\n        componentProps: {\n          items: this.selectedItems,\n        },\n      });\n      warehousemodal.onDidDismiss().finally(() => {\n        // TODO FIX this it should deselect only on successful action\n        this.deselectSelectedItems();\n      });\n      return warehousemodal.present();\n    },\n    async openActiveJobs() {\n      const bgjobmodal = await modalController.create({\n        component: BackgroundJobModal,\n        cssClass: \"my-custom-class\",\n      });\n      return bgjobmodal.present();\n    },\n    async editPromiseDate() {\n      const datemodal = await modalController.create({\n        component: PromiseDateModal,\n        cssClass: \"my-custom-class\",\n        componentProps: {\n          items: this.selectedItems,\n        },\n      });\n      datemodal.onDidDismiss().finally(() => {\n        // TODO FIX this it should deselect only on successful action\n        this.deselectSelectedItems();\n      });\n      return datemodal.present();\n    },\n    selectItem: function (event: any, item: any) {\n      const existingItemIndex = this.selectedItems.findIndex(\n        (element: any) =>\n          element.orderId === item.orderId &&\n          element.orderItemSeqId === item.orderItemSeqId\n      );\n      if (event.target.checked && existingItemIndex === -1) {\n        this.store.dispatch(\"order/addToSelectedItems\", { item });\n      } else if (!event.target.checked && existingItemIndex > -1) {\n        this.store.dispatch(\"order/removeFromSelectedItems\", {\n          index: existingItemIndex,\n        });\n      }\n    },\n    deselectSelectedItems: function () {\n      this.selectedItems.forEach((item: any) => {\n        item.isChecked = false;\n      });\n    },\n    async openPopover(ev: Event, item: any) {\n      const popover = await popoverController.create({\n        component: Popover,\n        componentProps: {\n          item: item,\n        },\n        event: ev,\n        translucent: true,\n        showBackdrop: false,\n      });\n      return popover.present();\n    },\n    async copyToClipboard(text: string) {\n      await Clipboard.write({\n        string: text,\n      }).then(() => {\n        showToast(this.$t(\"Copied\", { text }));\n      });\n    },\n    selectSearchBarText(event: any) {\n      event.target.getInputElement().then((element: any) => {\n        element.select();\n      });\n    },\n  },\n  setup() {\n    const store = useStore();\n    return {\n      store,\n      pricetag,\n      ribbon,\n      ellipsisVertical,\n      send,\n      business,\n      calendar,\n      closeCircle,\n      hourglass,\n      close,\n    };\n  },\n});\n</script>\n\n<style scoped>\n/* Table of contents\n\n  1. Desktop Header\n\n  2. Desktop Order\n      - Order Header\n        - Order ID\n        - Order Tags\n        - Order Metadata\n      - Order Items\n\n  3. Mobile Header\n\n  4. Mobile Order\n*/\n\n/* ==============\n 1. Desktop Header\n   ============== */\n\n.header {\n  display: grid;\n  grid:\n    \"search filters\"\n    \"results filters\"\n    /1fr 1fr;\n  grid-gap: 16px;\n  padding: 16px;\n  margin-bottom: 16px;\n}\n\n.search {\n  grid-area: search;\n}\n\n.filters {\n  grid-area: filters;\n}\n\n.results {\n  grid-area: results;\n  align-self: end;\n}\n\n.o-title {\n  font-family: montserrat;\n  font-weight: bold;\n}\n\n/* ==============\n 2. Desktop Order\n   ============== */\n\n.order {\n  border-top: 1px solid;\n  border-color: var(--ion-color-medium);\n  margin: 0 16px;\n}\n\n@import url(\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@500&display=swap\");\n.i-label {\n  font-family: \"Open Sans\", sans-serif;\n}\n\n.order-header {\n  display: grid;\n  grid: \"id tags metadata\" / max-content 1fr minmax(min-content, max-content);\n  align-items: center;\n}\n\n.order-id {\n  grid-area: id;\n}\n\n.order-tags {\n  grid-area: tags;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.order-metadata {\n  grid-area: metadata;\n\n  justify-self: end;\n  padding-right: 10px;\n}\n\n.order-metadata ion-note {\n  white-space: normal;\n}\n\n.order-items {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(343px, 1fr));\n  gap: 10px;\n}\n\n@media (max-width: 991px) {\n  /* ==============\n   3. Mobile Header\n     ============== */\n\n  .header {\n    grid:\n      \"search\"\n      \"filters\"\n      \"results\"\n      / auto;\n    padding: 0;\n  }\n\n  .results {\n    padding: 16px;\n  }\n  #error {\n    font-family: \"Open Sans\", sans-serif;\n  }\n\n  /* ==============\n   4. Mobile Order\n     ============== */\n\n  .order-header {\n    grid-template-areas:\n      \"id metadata\"\n      \"tags tags\";\n  }\n}\n</style>\n\n\n"]}]}