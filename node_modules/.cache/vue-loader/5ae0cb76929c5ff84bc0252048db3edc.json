{"remainingRequest":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/aniket/Desktop/Hact/preorder/src/views/products.vue?vue&type=style&index=0&id=67abbd7e&scoped=true&lang=css","dependencies":[{"path":"/home/aniket/Desktop/Hact/preorder/src/views/products.vue","mtime":1634894818942},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/css-loader/dist/cjs.js","mtime":1634884699328},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634884699752},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/postcss-loader/src/index.js","mtime":1634884699488},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/cache-loader/dist/cjs.js","mtime":1634884698972},{"path":"/home/aniket/Desktop/Hact/preorder/node_modules/vue-loader-v16/dist/index.js","mtime":1634884699380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgdXJsKCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2Fuczp3Z2h0QDUwMCZkaXNwbGF5PXN3YXAiKTsKCi5lbXB0eS1zdGF0ZSB7CiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTUwcHgpOwp9CgouZW1wdHktc3RhdGUgPiBpbWcgewogIHdpZHRoOiAxMDAlOwogIG1heC1oZWlnaHQ6IDQ1MHB4Owp9Cg=="},{"version":3,"sources":["/home/aniket/Desktop/Hact/preorder/src/views/products.vue"],"names":[],"mappings":";AAqOA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB","file":"/home/aniket/Desktop/Hact/preorder/src/views/products.vue","sourceRoot":"","sourcesContent":["\n<template>\n  <ion-page>\n    <ion-header :translucent=\"true\">\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title style=\"font-family: Montserrat; font-weight: bold\">{{\n          $t(\"Products\")\n        }}</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button @click=\"openActiveJobs\">\n            <ion-icon\n              :color=\"isJobPending ? 'warning' : ''\"\n              :icon=\"hourglass\"\n              slot=\"icon-only\"\n            />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content :fullscreen=\"true\">\n      <ion-searchbar\n        @ionFocus=\"selectSearchBarText($event)\"\n        :placeholder=\"$t('Search products')\"\n        v-model=\"queryString\"\n        v-on:keyup.enter=\"getProducts()\"\n      ></ion-searchbar>\n\n      <!-- Empty state -->\n      <div class=\"empty-state\" v-if=\"products.length === 0\">\n        <!-- No result -->\n        <p v-if=\"hasQuery\">{{ $t(\"No results found\") }}</p>\n        <img src=\"../assets/images/Productsemptystate.png\" />\n        <p style=\"font-family: Open Sans; font-weight: bold\">\n          {{\n            $t(\"Enter a product name, style name, SKU, UPCA or external ID.\")\n          }}\n        </p>\n      </div>\n\n      <!-- Products -->\n      <div v-else>\n        <ion-item\n          v-bind:key=\"product.groupValue\"\n          v-for=\"product in products\"\n          lines=\"none\"\n          @click=\"\n            () =>\n              router.push({\n                name: 'Product-details',\n                params: { id: product.groupValue },\n              })\n          \"\n        >\n          <ion-thumbnail slot=\"start\">\n            <Image :src=\"getProduct(product.groupValue).mainImageUrl\"></Image>\n          </ion-thumbnail>\n          <ion-label>\n            <h2>{{ getProduct(product.groupValue).productName }}</h2>\n            <p>\n              {{ $t(\"Colors\") }} :\n              {{\n                $filters.getFeatures(\n                  getProduct(product.groupValue).featureHierarchy,\n                  \"1/COLOR/\"\n                )\n              }}\n            </p>\n            <p>\n              {{ $t(\"Sizes\") }} :\n              {{\n                $filters.getFeatures(\n                  getProduct(product.groupValue).featureHierarchy,\n                  \"1/SIZE/\"\n                )\n              }}\n            </p>\n          </ion-label>\n          <ion-badge slot=\"end\" color=\"success\"\n            >{{ product.doclist.numFound }}\n            {{ $t(\"pieces preordered\") }}</ion-badge\n          >\n        </ion-item>\n\n        <ion-infinite-scroll\n          @ionInfinite=\"loadMoreProducts($event)\"\n          threshold=\"100px\"\n          id=\"infinite-scroll\"\n          :disabled=\"!isScrolleable\"\n        >\n          <ion-infinite-scroll-content\n            loading-spinner=\"crescent\"\n            :loading-text=\"$t('Loading')\"\n          ></ion-infinite-scroll-content>\n        </ion-infinite-scroll>\n      </div>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonBadge,\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonItem,\n  IonLabel,\n  IonIcon,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonMenuButton,\n  IonPage,\n  IonThumbnail,\n  IonTitle,\n  IonSearchbar,\n  IonToolbar,\n  modalController,\n} from \"@ionic/vue\";\nimport { defineComponent } from \"vue\";\nimport { hourglass } from \"ionicons/icons\";\nimport { useRouter } from \"vue-router\";\nimport BackgroundJobModal from \"./background-job-modal.vue\";\nimport { useStore } from \"@/store\";\nimport { mapGetters } from \"vuex\";\nimport Image from \"@/components/Image.vue\";\n\nexport default defineComponent({\n  name: \"settings\",\n  components: {\n    IonBadge,\n    IonButton,\n    IonButtons,\n    IonContent,\n    IonHeader,\n    IonInfiniteScroll,\n    IonInfiniteScrollContent,\n    IonItem,\n    IonLabel,\n    IonIcon,\n    IonMenuButton,\n    IonPage,\n    IonThumbnail,\n    IonTitle,\n    IonSearchbar,\n    IonToolbar,\n    Image,\n  },\n  data() {\n    return {\n      queryString: \"\",\n      orderIdentificationTypeId: process.env.VUE_APP_ORD_IDENT_TYPE_ID,\n      orderedAfter: \"\",\n      orderedBefore: \"\",\n      selectedItems: [] as any,\n      hasQuery: false,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      products: \"product/getList\",\n      isScrolleable: \"product/isScrolleable\",\n      getProductStock: \"stock/getProductStock\",\n      getProduct: \"product/getProduct\",\n      isJobPending: \"job/isJobPending\",\n      selectedBrand: \"user/getSelectedBrand\",\n    }),\n  },\n  methods: {\n    async loadMoreProducts(event: any) {\n      this.getProducts(\n        undefined,\n        Math.ceil(\n          this.products.length / process.env.VUE_APP_VIEW_SIZE\n        ).toString()\n      ).then(() => {\n        event.target.complete();\n      });\n    },\n    async getProducts(vSize?: any, vIndex?: any) {\n      const viewSize = vSize ? vSize : process.env.VUE_APP_VIEW_SIZE;\n      const viewIndex = vIndex ? vIndex : 0;\n      const payload = {\n        viewSize,\n        viewIndex,\n        queryString: \"*\" + this.queryString + \"*\",\n        groupByField: \"parentProductId\",\n        groupLimit: 0,\n        filters: JSON.parse(process.env.VUE_APP_ORDER_FILTERS),\n      };\n      if (this.selectedBrand) {\n        payload.filters.push(\"productStoreId: \" + this.selectedBrand);\n      }\n      return this.store\n        .dispatch(\"product/findProducts\", payload)\n        .finally(() => {\n          this.hasQuery = true;\n        });\n    },\n    async openActiveJobs() {\n      const bgjobmodal = await modalController.create({\n        component: BackgroundJobModal,\n        cssClass: \"my-custom-class\",\n      });\n      return bgjobmodal.present();\n    },\n    selectSearchBarText(event: any) {\n      event.target.getInputElement().then((element: any) => {\n        element.select();\n      });\n    },\n  },\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    return {\n      router,\n      store,\n      hourglass,\n    };\n  },\n});\n</script>\n\n <style scoped>\n@import url(\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@500&display=swap\");\n\n.empty-state {\n  height: calc(100vh - 150px);\n}\n\n.empty-state > img {\n  width: 100%;\n  max-height: 450px;\n}\n</style> \n"]}]}